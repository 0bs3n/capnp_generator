@0xdbb9ad1f14bf0b36;  # unique file ID, generated by `capnp id`

enum AddressType {
    typeOne @0;
    typeTwo @1;
}


struct Person {
  name @0 :Text;
  email @1 :Text;
  phones @2 :List(PhoneNumber);
  birthdate @3 :Date;
  addressType @4 :AddressType;
  a @5 :UInt8;
  b @6 :UInt16;
  c @7 :UInt32;
  d @8 :UInt64;
  e @9 :Int8;
  f @10 :Int16;
  g @11 :Int32;
  h @12 :Int64;
  i @13 :Float32;
  j @14 :Float64;
  k @15 :Bool;
  data @16 :Data;
  mainPhone @17 :PhoneNumber;
  testList @18 :List(Bool);
  recursiveStruct @19 :Person;
  struct PhoneNumber {
    number @0 :Text;
    type @1 :Type;

    enum Type {
      mobile @0;
      home @1;
      work @2;
    }
  }
}

struct Date {
  year @0 :Int16;
  month @1 :UInt8;
  day @2 :UInt8;
}

const testConst :Float32 = 3.14;

interface TestInterface {
  returnOpposite @0 (input :Bool) -> (output :Bool);
}
